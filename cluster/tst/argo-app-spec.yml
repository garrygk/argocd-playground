apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: datadog
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: 09999-garry-playground
  destination:
    server: 'https://87.233.137.168:6443'
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
  info:
    - name: customer_id
      value: "09999"
  source:
    repoURL: 'https://helm.datadoghq.com'
    targetRevision: 2.19.*
    chart: datadog
    helm:
      values: |
        datadog:
          site:  datadoghq.eu
          apiKeyExistingSecret: datadog-secret
          appKeyExistingSecret: datadog-auth-token
          clusterChecks:
            enabled: true
          nodeLabelsAsTags:
            kubernetes.io/hostname: k8s-09999-garry-playground
            kubernetes.io/role: kube_role
          podLabelsAsTags:
            app: kube_app
            release: helm_release
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 256Mi
          tags:
            - "kubernetes_cluster:k8s-09999-garry-playground"
            - "cluster_env:dev"
          kubelet:
            host:
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            tlsVerify:  false
          collectEvents: true
          env:
            - name: DD_HEALTH_PORT
              value: "5556"
            - name: DD_COLLECT_KUBERNETES_EVENTS
              value: "true"
            - name: DD_LEADER_ELECTION
              value: "true"
            - name: DD_HEALTH_PORT
              value: "5555"
            - name: DD_EXTERNAL_METRICS_PROVIDER_ENABLED
              value: "true"
            - name: DD_EXTERNAL_METRICS_PROVIDER_PORT
              value: "8443"
            - name: DD_EXTERNAL_METRICS_PROVIDER_WPA_CONTROLLER
              value: "false"
            - name: DD_EXTERNAL_METRICS_PROVIDER_USE_DATADOGMETRIC_CRD
              value: "false"
            - name: DD_EXTERNAL_METRICS_AGGREGATOR
              value: "avg"
            - name: DD_CLUSTER_CHECKS_ENABLED
              value: "true"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: "kube_endpoints kube_services"
            - name: DD_EXTRA_LISTENERS
              value: "kube_endpoints kube_services"
            - name: DD_LOG_LEVEL
              value: "INFO"
            - name: DD_LEADER_LEASE_DURATION
              value: "15"
            - name: DD_KUBE_RESOURCES_NAMESPACE
              value: default
            - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
              value: "true"
            - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
              value: "true"
            - name: DD_APM_ENABLED
              value: "true"
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_DOGSTATSD_PORT
              value: "8125"
            - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
              value: "true"
            - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
              value: datadog-cluster-agent
            - name: DD_LOGS_ENABLED
              value: "true"
            - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
              value: "true"
            - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
              value: "true"
            - name: DD_DOGSTATSD_SOCKET
              value: "/var/run/datadog/dsd.socket"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: "clusterchecks endpointschecks"
          confd:
            docker.yaml: |-
              init_config: null
              instances:
                - collect_container_size: true
                  collect_images_stats: true
                  collect_disk_stats: true
                  collect_exit_codes: true
          dogStatsDSocketPath: /var/run/datadog/dsd.socket
          dockerSocketPath:  /var/run/docker.sock
        clusterAgent:
          enabled: true
          rbac:
            create: true
          metricsProvider:
            enabled: false
          podAnnotations:
            ad.datadoghq.com/datadog-cluster-agent.check_names: '["prometheus"]'
            ad.datadoghq.com/datadog-cluster-agent.init_configs: '[{}]'
            ad.datadoghq.com/datadog-cluster-agent.instances: '[{"prometheus_url": "http://%%host%%:5000/metrics","namespace": "datadog.cluster_agent","metrics": ["go_goroutines","go_memstats_*","process_*","api_requests","datadog_requests","external_metrics", "cluster_checks_*"]}]'
        deployment:
          enabled: true
        daemonset:
          useHostPort: true
        kube-state-metrics:
          rbac:
            create: true
        rbac:
          create: true
        service:
          type: ClusterIP